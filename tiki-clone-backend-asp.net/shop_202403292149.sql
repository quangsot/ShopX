--
-- Script was generated by Devart dbForge Studio 2020 for MySQL, Version 9.0.338.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 3/29/2024 9:49:41 PM
-- Server version: 8.0.30
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE shop;

--
-- Drop procedure `Proc_User_NewCode`
--
DROP PROCEDURE IF EXISTS Proc_User_NewCode;

--
-- Drop table `slice`
--
DROP TABLE IF EXISTS slice;

--
-- Drop table `categorydiscount`
--
DROP TABLE IF EXISTS categorydiscount;

--
-- Drop table `productdiscount`
--
DROP TABLE IF EXISTS productdiscount;

--
-- Drop table `discount`
--
DROP TABLE IF EXISTS discount;

--
-- Drop table `filterproperty`
--
DROP TABLE IF EXISTS filterproperty;

--
-- Drop table `variationoption`
--
DROP TABLE IF EXISTS variationoption;

--
-- Drop table `variation`
--
DROP TABLE IF EXISTS variation;

--
-- Drop table `productconfiguration`
--
DROP TABLE IF EXISTS productconfiguration;

--
-- Drop table `variationoptiongroup`
--
DROP TABLE IF EXISTS variationoptiongroup;

--
-- Drop table `userpaymentmethod`
--
DROP TABLE IF EXISTS userpaymentmethod;

--
-- Drop table `paymenttype`
--
DROP TABLE IF EXISTS paymenttype;

--
-- Drop table `orderitem`
--
DROP TABLE IF EXISTS orderitem;

--
-- Drop table `order`
--
DROP TABLE IF EXISTS `order`;

--
-- Drop table `orderstatus`
--
DROP TABLE IF EXISTS orderstatus;

--
-- Drop table `comment`
--
DROP TABLE IF EXISTS comment;

--
-- Drop table `rating`
--
DROP TABLE IF EXISTS rating;

--
-- Drop table `shoppingcartitem`
--
DROP TABLE IF EXISTS shoppingcartitem;

--
-- Drop table `viewedproduct`
--
DROP TABLE IF EXISTS viewedproduct;

--
-- Drop table `user`
--
DROP TABLE IF EXISTS user;

--
-- Drop table `role`
--
DROP TABLE IF EXISTS role;

--
-- Drop table `productimage`
--
DROP TABLE IF EXISTS productimage;

--
-- Drop table `productdetail`
--
DROP TABLE IF EXISTS productdetail;

--
-- Drop table `product`
--
DROP TABLE IF EXISTS product;

--
-- Drop table `brand`
--
DROP TABLE IF EXISTS brand;

--
-- Drop table `category`
--
DROP TABLE IF EXISTS category;

--
-- Drop table `supplier`
--
DROP TABLE IF EXISTS supplier;

--
-- Set default database
--
USE shop;

--
-- Create table `supplier`
--
CREATE TABLE supplier (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  SupplierProductId char(36) DEFAULT NULL,
  Address text DEFAULT NULL,
  Phone char(100) DEFAULT NULL,
  Email varchar(255) DEFAULT NULL,
  Country varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Status int DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `category`
--
CREATE TABLE category (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  ParentId char(36) DEFAULT NULL,
  Discription text DEFAULT NULL,
  Avatar text DEFAULT NULL,
  Hot int DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 2048,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE category
ADD CONSTRAINT category_ibfk_1 FOREIGN KEY (ParentId)
REFERENCES category (Id);

--
-- Create table `brand`
--
CREATE TABLE brand (
  Id char(36) NOT NULL,
  Code char(100) NOT NULL DEFAULT '',
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Country varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Status int DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `product`
--
CREATE TABLE product (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Avatar text DEFAULT NULL,
  TotalSold int DEFAULT NULL,
  AverageStar decimal(2, 1) UNSIGNED DEFAULT NULL,
  Hot int DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  CategoryId char(36) DEFAULT NULL,
  BrandId char(36) DEFAULT NULL,
  SupplierId char(36) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE product
ADD CONSTRAINT product_ibfk_1 FOREIGN KEY (CategoryId)
REFERENCES category (Id);

--
-- Create foreign key
--
ALTER TABLE product
ADD CONSTRAINT product_ibfk_2 FOREIGN KEY (BrandId)
REFERENCES brand (Id);

--
-- Create foreign key
--
ALTER TABLE product
ADD CONSTRAINT product_ibfk_3 FOREIGN KEY (SupplierId)
REFERENCES supplier (Id);

--
-- Create table `productdetail`
--
CREATE TABLE productdetail (
  Id char(36) NOT NULL,
  ProductId char(36) DEFAULT NULL,
  Name varchar(255) DEFAULT NULL,
  Brand varchar(255) DEFAULT NULL,
  InfoDetail longtext DEFAULT NULL,
  Description longtext DEFAULT NULL,
  TotalSell int DEFAULT NULL,
  TotalRating int DEFAULT NULL,
  TotalStar int NOT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE productdetail
ADD CONSTRAINT productdetail_ibfk_1 FOREIGN KEY (ProductId)
REFERENCES product (Id);

--
-- Create table `productimage`
--
CREATE TABLE productimage (
  Id int NOT NULL AUTO_INCREMENT,
  ProductDetailId char(36) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Path varchar(255) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `ProductId` on table `productimage`
--
ALTER TABLE productimage
ADD INDEX ProductId (ProductDetailId);

--
-- Create foreign key
--
ALTER TABLE productimage
ADD CONSTRAINT productimage_ibfk_1 FOREIGN KEY (ProductDetailId)
REFERENCES productdetail (Id);

--
-- Create table `role`
--
CREATE TABLE role (
  Id char(36) NOT NULL,
  Code int DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Discription text DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `user`
--
CREATE TABLE user (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Password varchar(255) DEFAULT NULL,
  RoleId char(36) DEFAULT NULL,
  Avatar text DEFAULT NULL,
  FullName varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Gender tinyint DEFAULT NULL,
  PhoneNumber char(100) DEFAULT NULL,
  Address text DEFAULT NULL,
  Age tinyint DEFAULT NULL,
  Email varchar(255) DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  RefreshToken varchar(5000) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE user
ADD CONSTRAINT user_ibfk_1 FOREIGN KEY (RoleId)
REFERENCES role (Id);

--
-- Create table `viewedproduct`
--
CREATE TABLE viewedproduct (
  Id char(36) NOT NULL,
  ProductId char(36) DEFAULT NULL,
  UserId char(36) DEFAULT NULL,
  Date datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE viewedproduct
ADD CONSTRAINT viewedproduct_ibfk_1 FOREIGN KEY (ProductId)
REFERENCES product (Id);

--
-- Create foreign key
--
ALTER TABLE viewedproduct
ADD CONSTRAINT viewedproduct_ibfk_2 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create table `shoppingcartitem`
--
CREATE TABLE shoppingcartitem (
  Id char(36) NOT NULL,
  UserId char(36) DEFAULT NULL,
  ProductsDetailId char(36) DEFAULT NULL,
  Quantity int DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE shoppingcartitem
ADD CONSTRAINT shoppingcartitem_ibfk_1 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create foreign key
--
ALTER TABLE shoppingcartitem
ADD CONSTRAINT shoppingcartitem_ibfk_2 FOREIGN KEY (ProductsDetailId)
REFERENCES productdetail (Id);

--
-- Create table `rating`
--
CREATE TABLE rating (
  Id char(36) NOT NULL,
  Stars int DEFAULT NULL,
  Content text DEFAULT NULL,
  ProductsId char(36) DEFAULT NULL,
  UserId char(36) DEFAULT NULL,
  RatingAt datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE rating
ADD CONSTRAINT rating_ibfk_1 FOREIGN KEY (ProductsId)
REFERENCES product (Id);

--
-- Create foreign key
--
ALTER TABLE rating
ADD CONSTRAINT rating_ibfk_2 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create table `comment`
--
CREATE TABLE comment (
  Id char(36) NOT NULL,
  ParentId char(36) DEFAULT NULL,
  Content text DEFAULT NULL,
  Star tinyint UNSIGNED DEFAULT NULL,
  ProductId char(36) NOT NULL DEFAULT '',
  UserId char(36) NOT NULL DEFAULT '',
  CommentAt datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `ProductsId` on table `comment`
--
ALTER TABLE comment
ADD INDEX ProductsId (ProductId);

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT comment_ibfk_1 FOREIGN KEY (ParentId)
REFERENCES comment (Id);

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT comment_ibfk_2 FOREIGN KEY (ProductId)
REFERENCES product (Id);

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT comment_ibfk_3 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create table `orderstatus`
--
CREATE TABLE orderstatus (
  Id int NOT NULL AUTO_INCREMENT,
  StatusName varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Description text DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 10,
AVG_ROW_LENGTH = 1820,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `order`
--
CREATE TABLE `order` (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  UserId char(36) DEFAULT NULL,
  UserPaymentMethodId char(36) DEFAULT NULL,
  ShippingtFee double DEFAULT NULL,
  ShippingAddress text DEFAULT NULL,
  TotalPrice double DEFAULT NULL,
  OrderStatus int NOT NULL,
  OrderDate datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE `order`
ADD CONSTRAINT order_ibfk_1 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create foreign key
--
ALTER TABLE `order`
ADD CONSTRAINT order_ibfk_2 FOREIGN KEY (OrderStatus)
REFERENCES orderstatus (Id);

--
-- Create table `orderitem`
--
CREATE TABLE orderitem (
  Id char(36) NOT NULL,
  OrderId char(36) DEFAULT NULL,
  ProductDetailId char(36) DEFAULT NULL,
  Price double DEFAULT NULL,
  Quantity int DEFAULT NULL,
  TotalPrice double DEFAULT NULL,
  ProductName varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  ProductAvatar varchar(255) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE orderitem
ADD CONSTRAINT orderitem_ibfk_1 FOREIGN KEY (OrderId)
REFERENCES `order` (Id);

--
-- Create foreign key
--
ALTER TABLE orderitem
ADD CONSTRAINT orderitem_ibfk_2 FOREIGN KEY (ProductDetailId)
REFERENCES productdetail (Id);

--
-- Create table `paymenttype`
--
CREATE TABLE paymenttype (
  Id char(36) NOT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `userpaymentmethod`
--
CREATE TABLE userpaymentmethod (
  Id char(36) NOT NULL,
  OrderId char(36) DEFAULT NULL,
  UserId char(36) DEFAULT NULL,
  PaymentTypeId char(36) DEFAULT NULL,
  Provider varchar(255) DEFAULT NULL,
  AccountNumber char(255) DEFAULT NULL,
  IsDefault tinyint DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE userpaymentmethod
ADD CONSTRAINT userpaymentmethod_ibfk_1 FOREIGN KEY (OrderId)
REFERENCES `order` (Id);

--
-- Create foreign key
--
ALTER TABLE userpaymentmethod
ADD CONSTRAINT userpaymentmethod_ibfk_2 FOREIGN KEY (UserId)
REFERENCES user (Id);

--
-- Create foreign key
--
ALTER TABLE userpaymentmethod
ADD CONSTRAINT userpaymentmethod_ibfk_3 FOREIGN KEY (PaymentTypeId)
REFERENCES paymenttype (Id);

--
-- Create table `variationoptiongroup`
--
CREATE TABLE variationoptiongroup (
  Id char(36) NOT NULL DEFAULT '',
  Discription text DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `productconfiguration`
--
CREATE TABLE productconfiguration (
  Id char(36) NOT NULL,
  ProductId char(36) DEFAULT NULL,
  ProductImageId int DEFAULT NULL,
  VariationOptionGroupId char(36) DEFAULT NULL,
  Price decimal(19, 2) DEFAULT NULL,
  Inventory int DEFAULT NULL,
  SKU varchar(255) DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE productconfiguration
ADD CONSTRAINT productconfiguration_ibfk_4 FOREIGN KEY (VariationOptionGroupId)
REFERENCES variationoptiongroup (Id);

--
-- Create foreign key
--
ALTER TABLE productconfiguration
ADD CONSTRAINT productconfiguration_ibfk_5 FOREIGN KEY (ProductId)
REFERENCES product (Id);

--
-- Create foreign key
--
ALTER TABLE productconfiguration
ADD CONSTRAINT productconfiguration_ibfk_6 FOREIGN KEY (ProductImageId)
REFERENCES productimage (Id);

--
-- Create table `variation`
--
CREATE TABLE variation (
  Id char(36) NOT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Discription text DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `variationoption`
--
CREATE TABLE variationoption (
  Id char(36) NOT NULL,
  VariationId char(36) DEFAULT NULL,
  VariationOptionGroupId char(36) DEFAULT NULL,
  Value varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE variationoption
ADD CONSTRAINT variationoption_ibfk_1 FOREIGN KEY (VariationId)
REFERENCES variation (Id);

--
-- Create foreign key
--
ALTER TABLE variationoption
ADD CONSTRAINT variationoption_ibfk_2 FOREIGN KEY (VariationOptionGroupId)
REFERENCES variationoptiongroup (Id);

--
-- Create table `filterproperty`
--
CREATE TABLE filterproperty (
  Id int NOT NULL AUTO_INCREMENT,
  Code varchar(255) DEFAULT NULL,
  CategoryId char(36) NOT NULL DEFAULT '',
  VariationId char(36) NOT NULL DEFAULT '',
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
COMMENT = 'Các thuộc tính dùng cho việc lọc phân trang';

--
-- Create foreign key
--
ALTER TABLE filterproperty
ADD CONSTRAINT filterproperty_ibfk_1 FOREIGN KEY (CategoryId)
REFERENCES category (Id);

--
-- Create foreign key
--
ALTER TABLE filterproperty
ADD CONSTRAINT filterproperty_ibfk_2 FOREIGN KEY (VariationId)
REFERENCES variation (Id);

--
-- Create table `discount`
--
CREATE TABLE discount (
  Id char(36) NOT NULL,
  Code char(100) DEFAULT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Type int DEFAULT NULL,
  Value double DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  StartDate datetime DEFAULT NULL,
  EndDate datetime DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create table `productdiscount`
--
CREATE TABLE productdiscount (
  Id char(36) NOT NULL,
  DiscountId char(36) DEFAULT NULL,
  ProductsId char(36) DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE productdiscount
ADD CONSTRAINT productdiscount_ibfk_1 FOREIGN KEY (DiscountId)
REFERENCES discount (Id);

--
-- Create foreign key
--
ALTER TABLE productdiscount
ADD CONSTRAINT productdiscount_ibfk_2 FOREIGN KEY (ProductsId)
REFERENCES product (Id);

--
-- Create table `categorydiscount`
--
CREATE TABLE categorydiscount (
  Id char(36) NOT NULL,
  DiscountId char(36) DEFAULT NULL,
  CategoryId char(36) DEFAULT NULL,
  Status tinyint DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create foreign key
--
ALTER TABLE categorydiscount
ADD CONSTRAINT categorydiscount_ibfk_1 FOREIGN KEY (DiscountId)
REFERENCES discount (Id);

--
-- Create foreign key
--
ALTER TABLE categorydiscount
ADD CONSTRAINT categorydiscount_ibfk_2 FOREIGN KEY (CategoryId)
REFERENCES category (Id);

--
-- Create table `slice`
--
CREATE TABLE slice (
  Id char(36) NOT NULL,
  Name varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci DEFAULT NULL,
  Avatar text DEFAULT NULL,
  Link text DEFAULT NULL,
  PRIMARY KEY (Id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

DELIMITER $$

--
-- Create procedure `Proc_User_NewCode`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE Proc_User_NewCode ()
COMMENT 'lấy mã mới cho user'
BEGIN
  DECLARE MaxCode bigint;
  DECLARE NewUserCode text;
  -- Tìm mã nhân viên có số lớn nhất trong db
  SELECT
    MAX(CAST(SUBSTRING(Code, 2) AS UNSIGNED)) INTO MaxCode
  FROM user u;

  -- Nếu không tìm thấy mã nào, gán giá trị ban đầu
  IF MaxCode IS NULL THEN
    SET MaxCode = 0;
  END IF;

  -- nếu mã đến giới hạn trả về -1
  IF MaxCode = 99999999999999999 THEN
    SET NewUserCode = '-1';
    SELECT
      NewUserCode;
  ELSE
    -- tăng mã lên 1
    SET NewUserCode = CONCAT('u', MaxCode + 1);
    SELECT
      NewUserCode;
  END IF;
END
$$

DELIMITER ;

-- 
-- Dumping data for table supplier
--
INSERT INTO supplier VALUES
('08dc2386-8a38-48f5-8c73-4e2d33c3b665', 'C1', 'Hà Thành', NULL, 'Hà nội', '09123456789', 'hathanh@gmail.com', 'Vietnam', NULL);

-- 
-- Dumping data for table category
--
INSERT INTO category VALUES
('05d028da-a53f-11ee-981a-34e6d767255e', 'DH4', 'Phụ kiện đồng hồ', '1ac89524-a53e-11ee-981a-34e6d767255e', 'Các loại phụ kiện thay thế, lắp ráp cho đồng hồ', '', 0, 1),
('11d62eac-a53c-11ee-981a-34e6d767255e', 'DT', 'Điện thoại', NULL, 'Các loại điện thoại', '', 0, 1),
('153fde9c-a53d-11ee-981a-34e6d767255e', 'DT2', 'Điện thoại phổ thông', '11d62eac-a53c-11ee-981a-34e6d767255e', 'Các loại điện thoại phím, có các tính năng cơ bản: nghe, gọi, nhắn tin đơn giản', '', 0, 1),
('1ac89524-a53e-11ee-981a-34e6d767255e', 'DH', 'Đồng hồ', NULL, 'Các loại đồng hồ', '', 0, 1),
('3ed60390-a53e-11ee-981a-34e6d767255e', 'DH1', 'Đồng hồ nam', '1ac89524-a53e-11ee-981a-34e6d767255e', 'Các loại đồng hồ dành cho nam giới', '', 0, 1),
('62ec32b4-a53e-11ee-981a-34e6d767255e', 'DH3', 'Đồng hồ nữ', '1ac89524-a53e-11ee-981a-34e6d767255e', 'Các loại đồng hồ dành cho nữ giới', '', 0, 1),
('9db74c9d-a53d-11ee-981a-34e6d767255e', 'DT3', 'Điện thoại bàn', '11d62eac-a53c-11ee-981a-34e6d767255e', 'Các loại điện thoại để bàn dành cho văn phòng hoặc để tại nhà', '', 0, 1),
('c18aea4a-a53c-11ee-981a-34e6d767255e', 'DT1', 'Điện thoại Smartphone', '11d62eac-a53c-11ee-981a-34e6d767255e', 'Các loại điện thoại thông minh, cảm ứng, nhiều tính năng giải chí và làm việc', '', 0, 1);

-- 
-- Dumping data for table brand
--
INSERT INTO brand VALUES
('08dc1384-6947-416b-83f1-b740a1144535', 'br2', 'samsung', 'VN', 1),
('08dc241c-29d8-403c-850a-906976825193', 'brandTest', 'Test', 'VN', 0),
('08dc241c-2a16-4f07-877f-af274ab6a013', 'brandTest', 'Test', 'VN', 0),
('ced5d38d-a58c-11ee-a784-34e6d767255e', 'Br1', 'Apple', 'Mĩ', 1);

-- 
-- Dumping data for table product
--
INSERT INTO product VALUES
('ad2b57e3-e475-11ee-bd9f-34e6d767255e', 'sp1', 'Điện thoại cục gạch', '', 0, 0.0, 0, 0, '11d62eac-a53c-11ee-981a-34e6d767255e', '08dc1384-6947-416b-83f1-b740a1144535', '08dc2386-8a38-48f5-8c73-4e2d33c3b665'),
('ff8abd79-e478-11ee-bd9f-34e6d767255e', 'sp2', 'Điện thoại cục gạch 1', '', 0, 0.0, 0, 0, '11d62eac-a53c-11ee-981a-34e6d767255e', '08dc1384-6947-416b-83f1-b740a1144535', '08dc2386-8a38-48f5-8c73-4e2d33c3b665');

-- 
-- Dumping data for table role
--
INSERT INTO role VALUES
('a85ef86d-da59-11ee-b006-34e6d767255e', 0, 'Admin', 'Have all permission', 0),
('a85f30a6-da59-11ee-b006-34e6d767255e', 1, 'User', 'Have some permission', 0);

-- 
-- Dumping data for table productdetail
--
INSERT INTO productdetail VALUES
('fa430a79-e82a-11ee-be0a-34e6d767255e', 'ad2b57e3-e475-11ee-bd9f-34e6d767255e', 'Điện thoại xịn', 'china', 'điện thoại ngon', 'điện thoại bền', 0, 0, 0);

-- 
-- Dumping data for table user
--
INSERT INTO user VALUES
('08dbf798-9d39-4898-88ec-5718d88ab1f7', 'u1', 'Quang', '$2a$11$As5bp/GO1f8NDDh3LwrrNeZIkIw4AzuH1CehARjdLG3SgmxFYPitu', 'a85ef86d-da59-11ee-b006-34e6d767255e', '/a.jpg', 'Trương Mạnh Quang', 0, '123456789', 'Hà nội', 21, 'quang@gmail.com', 1, 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzOTdhZDU5NC05MGVhLTQxZTItODA4Ni1iNzlkZGI1NTUwMDIiLCJ0b2tlbl90eXBlIjoicmVmcmVzaCIsInN1YiI6InF1YW5nQGdtYWlsLmNvbSIsImVtYWlsIjoicXVhbmdAZ21haWwuY29tIiwibmJmIjoxNzA5ODg1MDcwLCJleHAiOjE3MTI0NzcwNzAsImlhdCI6MTcwOTg4NTA3MCwiaXNzIjoiaHR0cHM6Ly9zaG9wLmNvbS8iLCJhdWQiOiJodHRwczovL3Nob3AuY29tLyJ9.-XgBezRf_1RNPAb7AJtFghC3MDXnDBtx4i-YO5PqhJR6RwtXNL1-eh09NFcOjRUKwhieerFBYIw8-2QBF-QcpQ'),
('08dc3cf5-2e2d-4060-8e63-0a0d7ef876e6', 'u2', '', '$2a$11$IpH1Ym0d9f8VCU/OtrDQHuVSB0sSJA/8BBReFgdgpXnzti/znhJlu', NULL, 'string', 'string', 0, 'string', 'string', 0, 'string', 1, NULL);

-- 
-- Dumping data for table orderstatus
--
INSERT INTO orderstatus VALUES
(1, 'Đơn hàng mới', 'Đơn hàng được tạo ra nhưng chưa được xử lý hoặc xác nhận.'),
(2, 'Đã xác nhận', 'Cửa hàng đã xác nhận đơn hàng và bắt đầu chuẩn bị sản phẩm cho giao hàng.'),
(3, 'Đang xử lý', 'Sản phẩm đang được chuẩn bị, đóng gói và chờ sẵn sàng cho quá trình vận chuyển.'),
(4, 'Đã gửi đi', 'Đơn hàng đã được chuyển cho bên vận chuyển và đang trong quá trình giao hàng tới địa chỉ nhận hàng.'),
(5, 'Đã nhận', 'Người dùng đã nhận được đơn hàng và đã xác nhận việc nhận hàng.'),
(6, 'Đã hoàn thành', 'Tất cả các bước trong quá trình đặt hàng đã được hoàn tất và giao dịch được coi là kết thúc.'),
(7, 'Đã hủy', 'Tất cả các bước trong quá trình đặt hàng đã được hoàn tất và giao dịch được coi là kết thúc.'),
(8, 'Đang chờ xử lý thanh toán', 'Đơn hàng đang chờ xử lý thanh toán hoặc có thể cần thêm thông tin từ phía khách hàng để hoàn tất thanh toán.'),
(9, 'Đã trả lại', 'Đơn hàng đã được trả lại và cửa hàng đang xử lý việc hoàn trả tiền hoặc thay thế sản phẩm.');

-- 
-- Dumping data for table paymenttype
--
-- Table shop.paymenttype does not contain any data (it is empty)

-- 
-- Dumping data for table variationoptiongroup
--
INSERT INTO variationoptiongroup VALUES
('897a113b-e476-11ee-bd9f-34e6d767255e', 'điện thoại cục gạch màu đen'),
('93b89fd7-e476-11ee-bd9f-34e6d767255e', 'điện thoại cục gạch màu xanh dương');

-- 
-- Dumping data for table productimage
--
INSERT INTO productimage VALUES
(1, 'fa430a79-e82a-11ee-be0a-34e6d767255e', 'ảnh test không có path', '/1'),
(2, 'fa430a79-e82a-11ee-be0a-34e6d767255e', 'ảnh test không có path', '/2');

-- 
-- Dumping data for table `order`
--
-- Table shop.`order` does not contain any data (it is empty)

-- 
-- Dumping data for table variation
--
INSERT INTO variation VALUES
('08dc24e9-4822-4fcf-8172-ba65be673147', 'Color', NULL),
('08dc24e9-4823-4e4a-8624-8be8273b1136', 'RAM', NULL);

-- 
-- Dumping data for table discount
--
-- Table shop.discount does not contain any data (it is empty)

-- 
-- Dumping data for table viewedproduct
--
-- Table shop.viewedproduct does not contain any data (it is empty)

-- 
-- Dumping data for table variationoption
--
INSERT INTO variationoption VALUES
('3ff380ed-e6c6-11ee-9b75-34e6d767255e', '08dc24e9-4822-4fcf-8172-ba65be673147', '93b89fd7-e476-11ee-bd9f-34e6d767255e', 'Xanh'),
('a9b18d1c-e476-11ee-bd9f-34e6d767255e', '08dc24e9-4822-4fcf-8172-ba65be673147', '897a113b-e476-11ee-bd9f-34e6d767255e', 'Đen');

-- 
-- Dumping data for table userpaymentmethod
--
-- Table shop.userpaymentmethod does not contain any data (it is empty)

-- 
-- Dumping data for table slice
--
-- Table shop.slice does not contain any data (it is empty)

-- 
-- Dumping data for table shoppingcartitem
--
-- Table shop.shoppingcartitem does not contain any data (it is empty)

-- 
-- Dumping data for table rating
--
-- Table shop.rating does not contain any data (it is empty)

-- 
-- Dumping data for table productdiscount
--
-- Table shop.productdiscount does not contain any data (it is empty)

-- 
-- Dumping data for table productconfiguration
--
INSERT INTO productconfiguration VALUES
('0cf4f4f2-e477-11ee-bd9f-34e6d767255e', 'ad2b57e3-e475-11ee-bd9f-34e6d767255e', NULL, '897a113b-e476-11ee-bd9f-34e6d767255e', 100.00, 10, 'T1'),
('e591e79b-e6c5-11ee-9b75-34e6d767255e', 'ff8abd79-e478-11ee-bd9f-34e6d767255e', NULL, '93b89fd7-e476-11ee-bd9f-34e6d767255e', 300.00, 5, 'T2');

-- 
-- Dumping data for table orderitem
--
-- Table shop.orderitem does not contain any data (it is empty)

-- 
-- Dumping data for table filterproperty
--
-- Table shop.filterproperty does not contain any data (it is empty)

-- 
-- Dumping data for table comment
--
-- Table shop.comment does not contain any data (it is empty)

-- 
-- Dumping data for table categorydiscount
--
-- Table shop.categorydiscount does not contain any data (it is empty)

--
-- Set default database
--
USE shop;

--
-- Drop trigger `Averange_Star_Comment_Trigger`
--
DROP TRIGGER IF EXISTS Averange_Star_Comment_Trigger;

--
-- Set default database
--
USE shop;

DELIMITER $$

--
-- Create trigger `Averange_Star_Comment_Trigger`
--
CREATE
DEFINER = 'root'@'localhost'
TRIGGER Averange_Star_Comment_Trigger
AFTER INSERT
ON comment
FOR EACH ROW
BEGIN
  DECLARE total_star mediumint UNSIGNED;
  DECLARE total_rating mediumint UNSIGNED;
  DECLARE avg_star decimal(2, 1) UNSIGNED;

  -- Tính tổng số star đánh giá của sản phẩm
  SELECT
    SUM(c.Star),
    COUNT(*) INTO total_star, total_rating
  FROM shop.comment c
  WHERE c.ProductId = NEW.ProductId;

  -- Tính trung bình số sao đánh giá của sản phẩm
  IF total_star IS NULL THEN
    SET avg_star = 0;
  ELSE
    SET avg_star = total_star / total_rating;
  END IF;

  -- Cập nhật trung bình số sao đánh giá vào bảng product
  UPDATE shop.product p
  SET p.AverageStar = avg_star
  WHERE p.Id = NEW.ProductId;
END
$$

DELIMITER ;

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;